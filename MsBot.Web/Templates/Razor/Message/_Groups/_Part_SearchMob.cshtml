@inherits TemplatePage<MsBotModel<GroupMsgReqVo>>
@using MsBot.Implementation.API;
@using MsBot.Implementation.MySql;
@using MsBot.Implementation.Template;
@using MsBot.Implementation.Template.Razor;
@using MsBot.Vo.API;
@using MsBot.Vo.Events.Message;
@using System.Text.RegularExpressions;
@using MsBot.Infrastructure;
@using Dapper;
@using System.Text;
@using System.IO;
@functions {
    public class MobName
    {
        public long Id { get; set; }
        public string Mob_Id { get; set; }
        public string Name { get; set; }
    }
    public class MobInfo
    {
        public long id { get; set; }
        public String mob_id { get; set; }
        public String level { get; set; }
        public String max_hp { get; set; }
        public String max_mp { get; set; }
        public String speed { get; set; }
        public String pa_damage { get; set; }
        public String ma_damage { get; set; }
        public String pd_rate { get; set; }
        public String md_rate { get; set; }
        public String acc { get; set; }
        public String eva { get; set; }
        public String pushed { get; set; }
        public String fs { get; set; }
        public String exp { get; set; }
        public String summer_type { get; set; }
        public String category { get; set; }
        public String elem_attr { get; set; }
        public String mob_type { get; set; }
        public String boss { get; set; }
        public String link { get; set; }
    }

    private GroupMsgRspVo GetResult()
    {
        var rawMsg = Model.Request.RawMessage;
        rawMsg = Regex.Replace(rawMsg, "&#91;", "[");
        rawMsg = Regex.Replace(rawMsg, "&#93;", "]");
        rawMsg = rawMsg.Substring(rawMsg.IndexOf("怪物") + 2);
        using(var conn = DbHelper.Instance.GetConnection(Model.Config.ConnectionString))
        {
            var mobNameList = conn.Query<MobName>("SELECT id, mob_id, `name` FROM mob_name WHERE name = @Name order by mob_id", new
            {
                Name = rawMsg
            }).ToList();

            var sb = new StringBuilder();
            if(!mobNameList.Any())
            {
                return new GroupMsgRspVo
                    {
                        AtSender = false,
                        Reply = "没有查询到怪物信息"
                    };
            }
            var j = 0;
            var valids = new List<MobName>();
            foreach(var mobName in mobNameList)
            {
                var mobInfo = conn.QueryFirstOrDefault<MobInfo>("SELECT * FROM mob_info WHERE mob_id = @MobId", new
                {
                    MobId = mobName.Mob_Id
                });

                if(mobInfo == null)
                    continue;

                valids.Add(mobName);
                if(!string.IsNullOrEmpty(mobInfo.link))
                {
                    var url = Path.Combine(Model.Config.ImageFolder, "result_img", mobInfo.link + ".img", mobInfo.link + ".img");
                    var fi = new DirectoryInfo(url);
                    if(fi.Exists && fi.GetFiles().Length > 0)
                    {
                        sb.Append("[CQ:image,file=result_img/")
                            .Append(mobInfo.link)
                            .Append(".img/")
                            .Append(mobInfo.link)
                            .Append(".img/")
                            .Append(fi.GetFiles()[0].Name)
                            .Append("]");
                        break;
                    }
                }

                var imgUrl = Model.Config.ImageFolder + "result_img/" + mobName.Mob_Id + ".img/" + mobName.Mob_Id + ".img";
                var imgFi = new DirectoryInfo(imgUrl);
                if(imgFi.Exists && imgFi.GetFiles().Length > 0)
                {
                    sb.Append("[CQ:image,file=result_img/")
                            .Append(mobName.Mob_Id)
                            .Append(".img/")
                            .Append(mobName.Mob_Id)
                            .Append(".img/")
                            .Append(imgFi.GetFiles()[0].Name)
                            .Append("]");
                    break;
                }
                j++;
            }

            if(j == mobNameList.Count)
                j = 0;

            var fMob = conn.QueryFirstOrDefault<MobInfo>("SELECT * FROM mob_info WHERE mob_id = @MobId", new
            {
                MobId = valids[j].Mob_Id
            });

            sb.Append(Environment.NewLine).Append(valids[j].Name).Append("(").Append(valids[j].Mob_Id).Append(")");
            if(fMob.boss == null)
                sb.Append(Environment.NewLine).Append("怪物类型:普通怪");
            else
                sb.Append(Environment.NewLine).Append("怪物类型:首领怪");
            sb.Append(Environment.NewLine)
            .Append("等级:").Append(fMob.level).Append(Environment.NewLine)
            .Append("血量:").Append(fMob.max_hp).Append(Environment.NewLine)
            //				.append("蓝量:").append(mobInfo.getMaxMp()).append(Environment.NewLine)
            .Append("防御:").Append(fMob.pd_rate).Append("%\r\n")
            //				.append("魔法防御:").append(mobInfo.getMdRate()).append("%\r\n")
            //				.append("移动速度:").append(mobInfo.getSpeed()).append(Environment.NewLine)
            //				.append("击退伤害:").append(mobInfo.getPushed()).append(Environment.NewLine)
            .Append("经验:").Append(fMob.exp).Append(Environment.NewLine)
            .Append("冰雷火毒圣暗物").Append(Environment.NewLine);
            if(fMob.elem_attr == null)
                sb.Append("○○○○○○○");
            else
            {
                var attr = fMob.elem_attr;
                var attrMap = new Dictionary<String, String>();
                attrMap.Add("I", "○");
                attrMap.Add("L", "○");
                attrMap.Add("F", "○");
                attrMap.Add("S", "○");
                attrMap.Add("H", "○");
                attrMap.Add("D", "○");
                attrMap.Add("P", "○");
                int index = 0;
                while(index < attr.Length)
                {
                    var ttt = attr.Substring(index, 1);
                    if(attr.Substring(index + 1, 1) == "1")
                    {
                        attrMap[ttt] = "×";
                    }
                    else if(attr.Substring(index + 1, 1) == "2")
                    {
                        attrMap[ttt] = "△";
                    }
                    else if(attr.Substring(index + 1, 1) == "3")
                    {
                        attrMap[ttt] = "◎";
                    }
                    index += 2;
                }
                sb.Append(attrMap["I"])
                .Append(attrMap["L"])
                .Append(attrMap["F"])
                .Append(attrMap["S"])
                .Append(attrMap["H"])
                .Append(attrMap["D"])
                .Append(attrMap["P"]);
            }
            APIHelper.Instance.SendGroupMsg(new GroupMessageReqVo
                {
                    GroupId = Model.Request.GroupId,
                    Message = sb.ToString()
                });

            if(mobNameList.Count >= 2)
            {
                var reply = "查询到同名的怪物有：";
                reply += Environment.NewLine + string.Join(Environment.NewLine, mobNameList.Select(mn => mn.Name + "(" + mn.Mob_Id + ")"));
                APIHelper.Instance.SendGroupMsg(new GroupMessageReqVo
                    {
                        GroupId = Model.Request.GroupId,
                        Message = reply
                    });
            }
        }
        return null;
    }
}
@SetResult(GetResult())