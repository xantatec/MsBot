@inherits TemplatePage<MsBotModel<GroupMsgReqVo>>
@using MsBot.Implementation.MySql;
@using MsBot.Implementation.Template;
@using MsBot.Implementation.Template.Razor;
@using MsBot.Infrastructure;
@using MsBot.Vo.Events.Message;
@using Dapper;
@using SixLabors.Fonts;
@using SixLabors.ImageSharp;
@using SixLabors.ImageSharp.Drawing;
@using SixLabors.ImageSharp.Drawing.Processing;
@using SixLabors.ImageSharp.PixelFormats;
@using SixLabors.ImageSharp.Processing;
@functions {
    private String SaveTempImage(string raw_message)
    {
        var imageName = Guid.NewGuid().ToString("N") + ".jpg";
        RequestHelper.Instance.DownloadFile(raw_message, Model.Config.ImageFolder, imageName);
        return imageName;
    }

    private string PunchSomeone(string headImg)
    {
        var sourceFilePath = System.IO.Path.Combine(Model.Config.ImageFolder, "img/punch.jpg");
        var waterFilePath = System.IO.Path.Combine(Model.Config.ImageFolder, headImg);
        var uuid = Guid.NewGuid().ToString().Replace("-", "");

        using (var sourceImage = Image.Load(sourceFilePath))
        {
            using(var waterImage = Image.Load(waterFilePath))
            {
                waterImage.Mutate(w =>
                {
                    w.Resize(148, 148).Clip(new EllipsePolygon(0, 0, 148, 148), c => { });
                });
                sourceImage.Mutate(x =>
                {
                    x.DrawImage(waterImage, new Point(280, 270), 1);
                });
            }
            var targetFileName = uuid + ".jpg";
            sourceImage.SaveAsJpeg(Model.Config.ImageFolder + targetFileName);
        }
        return "[CQ:image,file=" + uuid + ".jpg]";
    }

    private GroupMsgRspVo GetResult()
    {
        var request = Model.Request;
        var config = Model.Config;
        var rawMsg = Model.Request.RawMessage;


        int aIndex = rawMsg.IndexOf("[CQ:at,qq=") + 10;
        int bIndex = rawMsg.IndexOf("]");
        var findNumber = rawMsg.Substring(aIndex, bIndex - aIndex);
        var result = new GroupMsgRspVo { };
        if(rawMsg.Contains("别") || rawMsg.Contains("不") || rawMsg.Contains("怎么") || rawMsg.Contains("禁止"))
        {
            result.AtSender = true;
            result.Reply = "[CQ:image,file=img/buzhidao5.jpg]";
            return result;
        }
        var throwSomeone = "";
        if(config.BotMaster.Contains(findNumber))
        {
            var saveTempImage = SaveTempImage("http://q1.qlogo.cn/g?b=qq&nk=" + request.UserId + "&s=3");
            throwSomeone = PunchSomeone(saveTempImage);
            result.AtSender = false;
            result.Reply = "[CQ:at,qq=" + request.UserId + "]" + throwSomeone;
        }
        else
        {
            String saveTempImage = SaveTempImage("http://q1.qlogo.cn/g?b=qq&nk=" + findNumber + "&s=3");
            throwSomeone = PunchSomeone(saveTempImage);
            result.AtSender = false;
            result.Reply = "[CQ:at,qq=" + findNumber + "]" + throwSomeone;
        }
        return result;
    }
}
@SetResult(GetResult())